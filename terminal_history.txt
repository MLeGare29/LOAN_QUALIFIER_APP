    1  export CONDA_EXE='/cygdrive/c/Users/legar/anaconda3/Scripts/conda.exe'
    2  export _CE_M=''
    3  export _CE_CONDA=''
    4  export CONDA_PYTHON_EXE='C:\Users\legar\anaconda3\python.exe'
    5  # Copyright (C) 2012 Anaconda, Inc
    6  # SPDX-License-Identifier: BSD-3-Clause
    7  __conda_exe() (     "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"; )
    8  __conda_hashr() {     if [ -n "${ZSH_VERSION:+x}" ]; then         \rehash;     elif [ -n "${POSH_VERSION:+x}" ]; then         :  # pass
    9      else         \hash -r;     fi; }
   10  __conda_activate() {     if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
   11          PS1="$CONDA_PS1_BACKUP";         \unset CONDA_PS1_BACKUP;     fi;     \local ask_conda;     ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return;     \eval "$ask_conda";     __conda_hashr; }
   12  __conda_reactivate() {     \local ask_conda;     ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return;     \eval "$ask_conda";     __conda_hashr; }
   13  conda() {     \local cmd="${1-__missing__}";     case "$cmd" in         activate|deactivate)             __conda_activate "$@";             ;;         install|update|upgrade|remove|uninstall)             __conda_exe "$@" || \return;             __conda_reactivate;             ;;         *)             __conda_exe "$@";             ;;     esac; }
   14  if [ -z "${CONDA_SHLVL+x}" ]; then     \export CONDA_SHLVL=0
   15      if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then         PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}";     else         PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}";     fi;     \export PATH; 
   16      if [ -z "${PS1+x}" ]; then         PS1=;     fi; fi
   17  export CONDA_EXE='/cygdrive/c/Users/legar/anaconda3/Scripts/conda.exe'
   18  export _CE_M=''
   19  export _CE_CONDA=''
   20  export CONDA_PYTHON_EXE='C:\Users\legar\anaconda3\python.exe'
   21  # Copyright (C) 2012 Anaconda, Inc
   22  # SPDX-License-Identifier: BSD-3-Clause
   23  __conda_exe() (     "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"; )
   24  __conda_hashr() {     if [ -n "${ZSH_VERSION:+x}" ]; then         \rehash;     elif [ -n "${POSH_VERSION:+x}" ]; then         :  # pass
   25      else         \hash -r;     fi; }
   26  __conda_activate() {     if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
   27          PS1="$CONDA_PS1_BACKUP";         \unset CONDA_PS1_BACKUP;     fi;     \local ask_conda;     ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return;     \eval "$ask_conda";     __conda_hashr; }
   28  __conda_reactivate() {     \local ask_conda;     ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return;     \eval "$ask_conda";     __conda_hashr; }
   29  conda() {     \local cmd="${1-__missing__}";     case "$cmd" in         activate|deactivate)             __conda_activate "$@";             ;;         install|update|upgrade|remove|uninstall)             __conda_exe "$@" || \return;             __conda_reactivate;             ;;         *)             __conda_exe "$@";             ;;     esac; }
   30  if [ -z "${CONDA_SHLVL+x}" ]; then     \export CONDA_SHLVL=0
   31      if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then         PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}";     else         PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}";     fi;     \export PATH; 
   32      if [ -z "${PS1+x}" ]; then         PS1=;     fi; fi
   33  export CONDA_EXE='/cygdrive/c/Users/legar/anaconda3/Scripts/conda.exe'
   34  export _CE_M=''
   35  export _CE_CONDA=''
   36  export CONDA_PYTHON_EXE='C:\Users\legar\anaconda3\python.exe'
   37  # Copyright (C) 2012 Anaconda, Inc
   38  # SPDX-License-Identifier: BSD-3-Clause
   39  __conda_exe() (     "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"; )
   40  __conda_hashr() {     if [ -n "${ZSH_VERSION:+x}" ]; then         \rehash;     elif [ -n "${POSH_VERSION:+x}" ]; then         :  # pass
   41      else         \hash -r;     fi; }
   42  __conda_activate() {     if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
   43          PS1="$CONDA_PS1_BACKUP";         \unset CONDA_PS1_BACKUP;     fi;     \local ask_conda;     ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return;     \eval "$ask_conda";     __conda_hashr; }
   44  __conda_reactivate() {     \local ask_conda;     ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return;     \eval "$ask_conda";     __conda_hashr; }
   45  conda() {     \local cmd="${1-__missing__}";     case "$cmd" in         activate|deactivate)             __conda_activate "$@";             ;;         install|update|upgrade|remove|uninstall)             __conda_exe "$@" || \return;             __conda_reactivate;             ;;         *)             __conda_exe "$@";             ;;     esac; }
   46  if [ -z "${CONDA_SHLVL+x}" ]; then     \export CONDA_SHLVL=0
   47      if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then         PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}";     else         PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}";     fi;     \export PATH; 
   48      if [ -z "${PS1+x}" ]; then         PS1=;     fi; fi
   49  cd desktop
   50  cd CU-CHALLENGES/
   51  ls
   52  cd M2_CHALLENGE
   53  ls
   54  cd M2_CHALLENGE/
   55  ls
   56  conda activate dev
   57  python app.py
   58  app.py --helop
   59  app.py --help
   60  git add app.py
   61  git commit -m "Made a change to the code in app.py."
   62  git push
   63  git add README.md
   64  git commit -m "Made an additional change to the README.md file."
   65  git push
   66  python app.py
   67  python app.py
   68  python app.py
   69  clear
   70  python app.py
   71  python app.py
   72  git add data
   73  git commit -m "Addition of the qualifying loans csv."
   74  git push
   75  git add qualifier
   76  git commit -m "Changes to save csv within the fileio.py within utils." 
   77  git push
   78  git add app.py
   79  git commit -m "Made changes to the save_qualifying_loans() function and qualifying loans within the run() function."
   80  git push
   81  python app.py
   82  git add README.md
   83  git commit -m "Added a screenshot image of the prompt in the command line and added an additional contributor."
   84  git push
   85  git add README.md
   86  git commit -m "Added a change to the image in the Usability section of the README.md file."
   87  git push
   88  history 50 > terminal_history.txt
   89  history 100 > terminal_history.txt
